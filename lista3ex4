
#a)
samples <- rbeta(10000, 2.7, 6.3)

#b)

# quero que:
#hist(runif(10000,0,1))
# vire:
#hist(rbeta(10000, 2.7, 6.3))

likelihood_core.apt <- function(x,alpha,beta) {
  likelihood_core.apt <- (x^(alpha - 1))*((1 - x)^(beta - 1))
  return(likelihood_core.apt)
}

X_0 = 0.5

MHsample <- numeric(10000)
for (i in 1:10000) {
  MHsample[i] <- X_0
  
  X_star <- runif(1,0,1)
  alpha <- min((likelihood_core.apt(X_star,2.7,6.3)/likelihood_core.apt(X_0,2.7,6.3)),1)
  alpha
  
  if (runif(1) < alpha) {
    X_0 <- X_star
  }
}

#c

E4c <- data.frame(Mean = c(mean(samples[1000:10000]),mean(MHsample[1000:10000])), StError = c(sd(samples[1000:10000])^2,sd(MHsample[1000:10000])^2), row.names = c("MC", "MH"))

hist(samples[1000:10000])
hist(MHsample[1000:10000])

#d

plot(samples[1000:10000])
plot(MHsample[1000:10000])
acf(samples[1000:10000])
acf(MHsample[1000:10000])

# como muitas vezes o valor de X_s vai ser igual ao de X_{s-1}, durante essa amostragem de m10k vai ter menos draws diferentes um do outro, e portanto menos chance de que um próximo draw colora pra fora de onde já foi colorido

# engraçado que são duas amostras tão diferentes (plot(samples) =/= plot(MSsample)) mas que geram um histograma tão parecido. pa. discutir com o prof.

# engraçado que são duas amostras tão diferentes (plot(samples) =/= plot(MSsample)) mas que geram um histograma tão parecido. pa. discutir com o prof.
