# Define a function to calculate the sum of a sample
sum_of_sq_residuals <- function(sample_data) {
  total_sum <- sum((sample_data - mean(sample_data))^2)
  return(total_sum)
}

# Create a sample as per the previous example
set.seed(123)
Y_s <- rnorm(1000, mean = 1, sd = sqrt(3))

# Use the custom function to calculate the sum of the sample
RSS_Ys <- sum_of_sq_residuals(Y_s)

# Print the result
cat("RSS - residual sum of squares", RSS_Ys, "\n")

S <- 1000
M_st <- 10000

n <- S
mu0_st <- 1
n0_st <- 10
nu0_st <- 10
s0_st <- 24


kappa0_st <- n0_st
alpha0_st <- nu0_st/2
beta0_st <- nu0_st*s0_st/2         #ou s0_st^2 ?

mu1_st <- (kappa0_st*mu0_st + S*mean(Y_s))/(kappa0_st + S)
kappa1_st <- kappa0_st + S
alpha1_st <- alpha0_st + S/2
beta1_st <- beta0_st + RSS_Ys/2 + (kappa0_st*S*((mu0_st - mean(Y_s))^2))/(2*(kappa0_st + S))

gamma_sample10k_st <- rgamma(10000, shape = alpha1_st, rate = beta1_st)
normal_sample10k_st <- rnorm(10000, mean = mu1_st, sd = sqrt(1/mean(gamma_sample10k_st)))
mu1_st_estim10k <- mean(normal_sample10k_st)

gamma_sample100_st <- rgamma(100, shape = alpha1_st, rate = beta1_st)
normal_sample100_st <- rnorm(100, mean = mu1_st, sd = sqrt(1/mean(gamma_sample100_st)))
mu1_st_estim100 <- mean(normal_sample100_st)

mu1_estim10k_error <- mu1_st_estim10k - mu1_st
mu1_estim100_error <- mu1_st_estim100 - mu1_st

var1_st <- 1/(2*alpha1_st)
var1_estim10k_error <- 1/mean(gamma_sample10k_st) - var1_st
1/mean(gamma_sample100_st)

#====================================== nd ======================================
M_nd <- 100

mu0_nd <- 1
n0_nd <- 1
nu0_nd <- 5
s0_nd <- 9

kappa0_nd <- n0_nd
alpha0_nd <- nu0_nd/2
beta0_nd <- nu0_nd*s0_nd/2         #ou s0_nd^2 ?

mu1_nd <- (kappa0_nd*mu0_nd + S*mean(Y_s))/(kappa0_nd + S)
kappa1_nd <- kappa0_nd + S
alpha1_nd <- alpha0_nd + S/2
beta1_nd <- beta0_nd + RSS_Ys/2 + (kappa0_nd*S*((mu0_nd - mean(Y_s))^2))/(2*(kappa0_nd + S))

gamma_sample10k_nd <- rgamma(10000, shape = alpha1_nd, rate = beta1_nd)
normal_sample10k_nd <- rnorm(10000, mean = mu1_nd, sd = sqrt(1/mean(gamma_sample10k_nd)))
mu1_nd_estim10k <- mean(normal_sample10k_nd)

gamma_sample100_nd <- rgamma(100, shape = alpha1_nd, rate = beta1_nd)
normal_sample100_nd <- rnorm(100, mean = mu1_nd, sd = sqrt(1/mean(gamma_sample100_nd)))
mu1_nd_estim100 <- mean(normal_sample100_nd)

mu1_nd_estim10k - mu1_nd
mu1_nd_estim100 - mu1_nd



