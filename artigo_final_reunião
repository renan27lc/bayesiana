#==============================----- FIXED WINDOW = W, H=1 in whole code, NO INTERCEPT, n=3 ------============================================================

N <- 12
T <- nrow(yields)
yieldsN <- yields[, seq(from = 3, to = N*3, by = 3)] #*100
W <- 108
theta <- 10

#_____________________________________________________________________
#----1) matrix Psi.prior = [Phi_0.prior Phi_1.prior]'
#_____________________________________________________________________

Phi_0.prior <- numeric(N)

Phi_1.prior <- diag(0.99, N)

Psi.prior <- t(cbind(Phi_0.prior, Phi_1.prior))

#_____________________________________________________________________
#----2) matrix Omega.prior
#_____________________________________________________________________

Omega.prior <- diag(N+1)*theta


#_____________________________________________________________________
#----3) matrices X and Y
#_____________________________________________________________________

Y <-  as.matrix(yieldsN[2:W, ])

Y_ <-  yieldsN[1:(W - 1), ]
X_intercept <- matrix(1, ncol = 1, nrow = (W-1))
X <- as.matrix(cbind(X_intercept,Y_))

#_____________________________________________________________________
#----4) Psi.posterior and BVAR estimation
#_____________________________________________________________________

Psi.posterior <- solve(solve(Omega.prior) + t(X) %*% X) %*% (solve(Omega.prior) %*% Psi.prior + t(X) %*% (Y))             #### But Omega is NxN and XtX is MxM (M = N+1)!

Phi_0.posterior <- as.matrix(t(Psi.posterior)[,1])
Phi_1.posterior <- as.matrix(t(Psi.posterior)[,2:nrow(Psi.posterior)])

E_yieldsN_car <- matrix(nrow = (T - W), ncol = N)
rownames(E_yieldsN_car) <- rownames(yieldsN[(W + 1):T,])
for (t in 1:(T - W)) {
    E_yieldsN_car[t , ] <- Phi_0.posterior + Phi_1.posterior %*% t(yieldsN[(t + W - 1), ])
}

#_____________________________________________________________________
#----5) MSFE Carriero
#_____________________________________________________________________

yieldsN_T0 <- yieldsN[(W + 1):T,]

MSFE_car <- matrix(nrow = 1, ncol = ncol(yieldsN_T0))
for (i in 1:ncol(yieldsN_T0)) {
  MSFE_car[,i] <- (sum(E_yieldsN_car[,i] - yieldsN_T0[,i])^2)/(T - W)
}

#_____________________________________________________________________
#----6) MSFE Random Walk
#_____________________________________________________________________

E_yieldsN_rw <- yieldsN[(W):(T - 1),]
rownames(E_yieldsN_rw) <- rownames(yieldsN[(W + 1):T,])

MSFE_rw <- matrix(nrow = 1, ncol = ncol(yieldsN_T0))
for (i in 1:ncol(yieldsN_T0)) {
    MSFE_rw[,i] <- (sum(E_yieldsN_rw[,i] - yieldsN_T0[,i])^2)/(T - W)
}

MSFE_car/MSFE_rw

#_____________________________________________________________________
#----7) MSFE AR
#_____________________________________________________________________


#_____________________________________________________________________
#----8) MSFE VAR
#_____________________________________________________________________

Psi.VAR <- solve(t(X) %*% X) %*% (t(X) %*% (Y))

Phi_0.VAR <- as.matrix(t(Psi.VAR)[,1])
Phi_1.VAR <- as.matrix(t(Psi.VAR)[,2:nrow(Psi.VAR)])

E_yieldsN_VAR <- matrix(nrow = (T - W), ncol = ncol(yieldsN))
rownames(E_yieldsN_VAR) <- rownames(yieldsN[(W + 1):T,])
for (t in 1:(T - W)) {
    E_yieldsN_VAR[t , ] <- Phi_0.VAR + Phi_1.VAR %*% t(yieldsN[(t + W - 1), ])
}

MSFE_VAR <- matrix(nrow = 1, ncol = ncol(yieldsN_T0))
for (i in 1:ncol(yieldsN_T0)) {
  MSFE_VAR[i] <- (sum(E_yieldsN_VAR[,i] - yieldsN_T0[,i])^2)/(T - W)
}

MSFE_VAR/MSFE_rw

#var_model <- VAR(yieldsN[1:W, ], p = 1)


















#==============================-----ROLLING WINDOW = 108, H=1 in whole code, ar with fixed 108 window, NO INTERCEPT------============================================================


N <- 12
T <- nrow(yields)
by <- 1
yieldsN <- yields[, seq(from = by, to = N*by, by = by)] #*100
W <- 108
theta <- 1

Phi_0.prior <- numeric(N)

Phi_1.prior <- diag(0.99, N)

Psi.prior <- t(cbind(Phi_0.prior, Phi_1.prior))

Omega.prior <- diag(N+1)*theta


Y_list_h1 <- lapply(1:(T - W), function(t) yieldsN[(t + 1):(t + W - 1), ])

X_list_h1 <- lapply(1:(T - W), function(t) {
  matrix_with_ones <- cbind(1, yieldsN[(t):(t + W - 2), ])
  return(matrix_with_ones)
})



Psi.posterior_list <- vector("list", length = (T - W))

for (t in 1:(T - W)) {
  intermediate_matrix1_h1 <- solve(solve(Omega.prior) + t(X_list_h1[[t]]) %*% as.matrix(X_list_h1[[t]]))
  intermediate_matrix2_h1 <- solve(Omega.prior) %*% Psi.prior + t(X_list_h1[[t]]) %*% as.matrix(Y_list_h1[[t]])
  Psi.posterior_t <- intermediate_matrix1_h1 %*% intermediate_matrix2_h1
  Psi.posterior_list[[t]] <- Psi.posterior_t
}

Phi_0.posterior_list <- vector("list", length = (T - W))
for (t in 1:(T - W)) {
Phi_0.posterior_list[[t]] <- as.matrix(t(Psi.posterior_list[[t]])[,1])
}

Phi_1.posterior_list <- vector("list", length = (T - W))
for (t in 1:(T - W)) {
Phi_1.posterior_list[[t]] <- as.matrix(t(Psi.posterior_list[[t]])[,2:nrow(Psi.posterior_list[[t]])])
}


E_yieldsN_car <- matrix(nrow = (T - W), ncol = N)
rownames(E_yieldsN_car) <- rownames(yieldsN[(W + 1):T,])
for (t in 1:(T - W)) {
    E_yieldsN_car[t , ] <- Phi_0.posterior_list[[t]] + Phi_1.posterior_list[[t]] %*% t(yieldsN[(t + W - 1), ])
}

yieldsN_T0 <- yieldsN[(W + 1):T,]

MSFE_car <- numeric(ncol(E_yieldsN_car))
for (i in 1:ncol(E_yieldsN_car)) {
  MSFE_car[i] <- (sum(E_yieldsN_car[,i] - yieldsN_T0[,i])^2)/(T - W)
}

E_yieldsN_rw <- yieldsN[(W):(T - 1),]
rownames(E_yieldsN_rw) <- rownames(yieldsN[(W + 1):T,])

MSFE_rw <- matrix(nrow = 1, ncol = ncol(E_yieldsN_car))
for (i in 1:ncol(E_yieldsN_car)) {
    MSFE_rw[,i] <- (sum(E_yieldsN_rw[,i] - yieldsN_T0[,i])^2)/(T - W)
}

MSFE_car/MSFE_rw

# VAR

Psi.posterior_list <- vector("list", length = (T - W))



Psi.VAR_list <- vector("list", length = (T - W))

for (t in 1:(T - W)) {
  intermediate_matrix1_h1 <- solve(t(X_list_h1[[t]]) %*% as.matrix(X_list_h1[[t]]))
  intermediate_matrix2_h1 <- t(X_list_h1[[t]]) %*% as.matrix(Y_list_h1[[t]])
  Psi.VAR_t <- intermediate_matrix1_h1 %*% intermediate_matrix2_h1
  Psi.VAR_list[[t]] <- Psi.VAR_t
}

Phi_0.VAR_list <- vector("list", length = (T - W))
for (t in 1:(T - W)) {
Phi_0.VAR_list[[t]] <- as.matrix(t(Psi.VAR_list[[t]])[,1])
}

Phi_1.VAR_list <- vector("list", length = (T - W))
for (t in 1:(T - W)) {
Phi_1.VAR_list[[t]] <- as.matrix(t(Psi.VAR_list[[t]])[,2:nrow(Psi.VAR_list[[t]])])
}

E_yieldsN_VAR <- matrix(nrow = (T - W), ncol = N)
rownames(E_yieldsN_VAR) <- rownames(yieldsN[(W + 1):T,])
for (t in 1:(T - W)) {
    E_yieldsN_VAR[t , ] <- Phi_0.VAR_list[[t]] + Phi_1.VAR_list[[t]] %*% t(yieldsN[(t + W - 1), ])
}

MSFE_VAR <- numeric(ncol(E_yieldsN_car))
for (i in 1:ncol(E_yieldsN_car)) {
  MSFE_VAR[i] <- (sum(E_yieldsN_VAR[,i] - yieldsN_T0[,i])^2)/(T - W)
}








