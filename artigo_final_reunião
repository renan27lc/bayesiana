#==============================----- FIXED WINDOW = W, H=1 in whole code, NO INTERCEPT, n=3 ------============================================================

N <- 12
T <- nrow(yields)
yieldsN <- yields[, seq(from = 3, to = N*3, by = 3)] #*100
W <- 108
theta <- 10

#_____________________________________________________________________
#----1) matrix Psi.prior = [Phi_0.prior Phi_1.prior]'
#_____________________________________________________________________

Phi_0.prior <- numeric(N) + 1

Phi_1.prior <- diag(0.99, N)

Psi.prior <- t(cbind(Phi_0.prior, Phi_1.prior))

#_____________________________________________________________________
#----2) matrix Omega.prior
#_____________________________________________________________________

Omega.prior <- diag(N+1)*theta


#_____________________________________________________________________
#----3) matrices X and Y
#_____________________________________________________________________

Y <-  as.matrix(yieldsN[2:W, ])

Y_ <-  yieldsN[1:(W - 1), ]
X_intercept <- matrix(1, ncol = 1, nrow = (W-1))
X <- as.matrix(cbind(X_intercept,Y_))

#_____________________________________________________________________
#----4) Psi.posterior and BVAR estimation
#_____________________________________________________________________

Psi.posterior <- solve(solve(Omega.prior) + t(X) %*% X) %*% (solve(Omega.prior) %*% Psi.prior + t(X) %*% (Y))             #### But Omega is NxN and XtX is MxM (M = N+1)!

Phi_0.posterior <- as.matrix(t(Psi.posterior)[,1])
Phi_1.posterior <- as.matrix(t(Psi.posterior)[,2:nrow(Psi.posterior)])

E_yieldsN_car <- matrix(nrow = (T - W), ncol = N)
rownames(E_yieldsN_car) <- rownames(yieldsN[(W + 1):T,])
for (t in 1:(T - W)) {
    E_yieldsN_car[t , ] <- Phi_0.posterior + Phi_1.posterior %*% t(yieldsN[(t + W - 1), ])
}

#_____________________________________________________________________
#----5) MSFE Carriero
#_____________________________________________________________________

yieldsN_T0 <- yieldsN[(W + 1):T,]

MSFE_car <- matrix(nrow = 1, ncol = ncol(yieldsN_T0))
for (i in 1:ncol(yieldsN_T0)) {
  MSFE_car[,i] <- (sum(E_yieldsN_car[,i] - yieldsN_T0[,i])^2)/(T - W)
}

#_____________________________________________________________________
#----6) MSFE Random Walk
#_____________________________________________________________________

E_yieldsN_rw <- yieldsN[(W):(T - 1),]
rownames(E_yieldsN_rw) <- rownames(yieldsN[(W + 1):T,])

MSFE_rw <- matrix(nrow = 1, ncol = ncol(yieldsN_T0))
for (i in 1:ncol(yieldsN_T0)) {
    MSFE_rw[,i] <- (sum(E_yieldsN_rw[,i] - yieldsN_T0[,i])^2)/(T - W)
}

#_____________________________________________________________________
#----7) MSFE AR
#_____________________________________________________________________


#_____________________________________________________________________
#----8) MSFE VAR
#_____________________________________________________________________

Psi.VAR <- solve(t(X) %*% X) %*% (t(X) %*% (Y))

Phi_0.VAR <- as.matrix(t(Psi.VAR)[,1])
Phi_1.VAR <- as.matrix(t(Psi.VAR)[,2:nrow(Psi.VAR)])

E_yieldsN_VAR <- matrix(nrow = (T - W), ncol = ncol(yieldsN))
rownames(E_yieldsN_VAR) <- rownames(yieldsN[(W + 1):T,])
for (t in 1:(T - W)) {
    E_yieldsN_VAR[t , ] <- Phi_0.VAR + Phi_1.VAR %*% t(yieldsN[(t + W - 1), ])
}

MSFE_VAR <- matrix(nrow = 1, ncol = ncol(yieldsN_T0))
for (i in 1:ncol(yieldsN_T0)) {
  MSFE_VAR[i] <- (sum(E_yieldsN_VAR[,i] - yieldsN_T0[,i])^2)/(T - W)
}

MSFE_VAR/MSFE_rw

#var_model <- VAR(yieldsN[1:W, ], p = 1)










